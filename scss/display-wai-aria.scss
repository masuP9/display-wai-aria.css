@charset "utf-8" ;

/*! display-wai-aria.css v0.2.3 | MIT License | github.com/masuP9/display-wai-aria.css */

/*
 common style
*/
%common-style {
  display: inline-block !important;
  margin-left: .25em !important;
  margin-right: .25em !important;
  padding: 0 .25em !important;
  border-style: solid !important;
  border-width: 2px !important;
  color: #333 !important;
  font: inherit !important;
  font-size: .875rem !important;
  font-weight: bold !important;
  line-height: 1.7 !important;
  vertical-align: super !important;
  white-space: nowrap !important;
}

@mixin element-style($color) {
  background-color: rgba($color, .25) !important;
  box-shadow: inset 0 0 0 1px darken($color, 10%) !important;
}

/*
 role
*/
$color-role: #ff0;

[role] {
  @include element-style($color-role);
}

[role]::after {
  content: "role: " attr(role);
  @extend %common-style;
  @include element-style($color-role);
}

/*
 state
*/
$color-state: #f9f;
$aria-state: busy,checked,current,disabled,expanded,grabbed,hidden,invalid,pressed,selected;

@each $state in $aria-state {
  [aria-#{$state}] {
    @extend %state-style;
  }

  [aria-#{$state}]::after {
    content: "aria-#{$state}: " attr(aria-#{$state}) !important;
    @extend %common-style;
    @extend %state-style;
  }

  [aria-#{$state}="false"]::after {
    @extend %false-style;
  }
}

/* state-style */
%state-style {
  @include element-style($color-state);
}

/*
 property
*/
$color-property: #9ff;
$aria-property: activedescendant,atomic,autocomplete,colcount,colindex,colspan,controls,describedat,describedby,details,dropeffect,errormessage,flowto,haspopup,keyshortcuts,label,labelledby,level,live,modal,multiline,multiselectable,orientation,owns,placeholder,posinset,readonly,relevant,required,roledescription,rowcount,rowindex,rowspan,setsize,sort,valuemax,valuemin,valuenow,valuetext;

@each $property in $aria-property {
  [aria-#{$property}] {
    @extend %property-style;
  }

  [aria-#{$property}]::before {
    content: "aria-#{$property}: " attr(aria-#{$property}) !important;
    @extend %common-style;
    @extend %property-style;
  }

  [aria-#{$property}="false"]::after {
    @extend %false-style;
  }
}

/* property-style */
%property-style {
  @include element-style($color-property);
}

/* false-style */
%false-style {
  border-style: dotted !important;
  color: #666 !important;
}